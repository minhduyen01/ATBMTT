/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CoNhungXinhDep;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

import AES.AES;
import LSB.LSB;
import java.nio.file.Paths;
import java.util.Scanner;

/**
 *
 * @author hoang
 */
public class MaHoaFile extends javax.swing.JFrame {

    
    private String contentFile;
    private File dirFile = new File("images");
    private BufferedImage bufferedImageBefore;
    private BufferedImage bufferedImageAfter;
    /**
     * Creates new form MaHoaFile
     */
    public MaHoaFile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_NoiDung = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_Khoa = new javax.swing.JTextField();
        btn_NhungAnh = new javax.swing.JButton();
        btn_ChonAnh = new javax.swing.JButton();
        btn_Dong = new javax.swing.JButton();
        imageBefore = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        imageAfter = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        btn_ChonFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_NoiDung.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Khóa bí mật:");

        txt_Khoa.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        btn_NhungAnh.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_NhungAnh.setText("Nhúng Ảnh");
        btn_NhungAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NhungAnhActionPerformed(evt);
            }
        });

        btn_ChonAnh.setText("Chọn Ảnh");
        btn_ChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChonAnhActionPerformed(evt);
            }
        });

        btn_Dong.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_Dong.setText("Ðóng");
        btn_Dong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DongActionPerformed(evt);
            }
        });

        imageBefore.setBorder(javax.swing.BorderFactory.createTitledBorder("Ảnh chưa mã hóa"));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Mã Hóa");

        imageAfter.setBorder(javax.swing.BorderFactory.createTitledBorder("Ảnh đã mã hóa"));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Nội dung:");

        btn_ChonFile.setText("Chọn File");
        btn_ChonFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChonFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txt_NoiDung, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Khoa, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ChonFile)
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_NhungAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(btn_Dong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(410, 410, 410))
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(imageBefore, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ChonAnh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imageAfter, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(imageAfter, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(imageBefore, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btn_ChonAnh))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_NoiDung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_NhungAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_ChonFile))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Dong, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_Khoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_NhungAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NhungAnhActionPerformed
        String content = contentFile.trim();
        String secretKey = txt_Khoa.getText().trim();
        if (content.compareTo("") == 0 || secretKey.compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Nội dung và khóa bí mật không được để trống", "Dữ liệu không hợp lệ", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (bufferedImageBefore == null) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn ảnh", "Dữ liệu không hợp lệ", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String encryptedContent = AES.encrypt(content, secretKey);
        int[] bits = LSB.getBitFromContent(encryptedContent);

        try {
            LSB.hideTheMessage(bits, bufferedImageBefore);
            File file = new File(".\\images\\image_encrypted.png");
            BufferedImage bufferedImage = ImageIO.read(file);
            JLabel l = new JLabel(new ImageIcon(bufferedImage));
            imageAfter.getViewport().add(l);
            JOptionPane.showMessageDialog(this, "Mã hóa thành công.\nẢnh đã mã hóa được lưu vào: \n" + dirFile.getAbsolutePath() + "\\image_encrypted.png", "Mã hóa", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Mã hóa thất bại", "Mã hóa", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_NhungAnhActionPerformed

    private void btn_ChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChonAnhActionPerformed
        try {
            File file = showFileDialog(true);
            BufferedImage bufferedImage = ImageIO.read(file);
            bufferedImageBefore = bufferedImage;
            JLabel l = new JLabel(new ImageIcon(bufferedImage));
            imageBefore.getViewport().add(l);
        } catch (IOException ex) {
            Logger.getLogger(MaHoaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ChonAnhActionPerformed

    private void btn_DongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DongActionPerformed
        Menu mn = new Menu();
        mn.setVisible(true);
        mn.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btn_DongActionPerformed

    private void btn_ChonFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChonFileActionPerformed
        try {
            String dataString = "";
            File file = showFileContentDialog(true);
            txt_NoiDung.setText(file.getAbsolutePath());
            Scanner scanner = new Scanner(Paths.get(file.getAbsolutePath()), "UTF-8");
            while (scanner.hasNext()) {
                String data = scanner.nextLine();
                dataString += data;
                dataString += "\n";
            }
            contentFile = dataString;
        } catch (IOException ex) {
            Logger.getLogger(MaHoaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ChonFileActionPerformed

    private File showFileDialog(final boolean open) {
        JFileChooser fc = new JFileChooser("Open an image");
        fc.setCurrentDirectory(new File(".").getAbsoluteFile());
        FileFilter ff = new FileFilter() {
            public boolean accept(File f) {
                String name = f.getName().toLowerCase();
                if (open) {
                    return f.isDirectory() || name.endsWith(".jpg") || name.endsWith(".jpeg")
                            || name.endsWith(".png") || name.endsWith(".gif") || name.endsWith(".tiff")
                            || name.endsWith(".bmp") || name.endsWith(".dib");
                }
                return f.isDirectory() || name.endsWith(".png") || name.endsWith(".bmp");
            }

            public String getDescription() {
                if (open) {
                    return "Image (*.jpg, *.jpeg, *.png, *.gif, *.tiff, *.bmp, *.dib)";
                }
                return "Image (*.png, *.bmp)";
            }
        };
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(ff);

        File f = null;
        if (open && fc.showOpenDialog(this) == fc.APPROVE_OPTION) {
            f = fc.getSelectedFile();
        } else if (!open && fc.showSaveDialog(this) == fc.APPROVE_OPTION) {
            f = fc.getSelectedFile();
        }
        return f;
    }
    
    private File showFileContentDialog(final boolean open) {
        JFileChooser fc = new JFileChooser("Open a file");
        fc.setCurrentDirectory(new File(".").getAbsoluteFile());
        FileFilter ff = new FileFilter() {
            public boolean accept(File f) {
                String name = f.getName().toLowerCase();
                if (open) {
                    return f.isDirectory() || name.endsWith(".txt") || name.endsWith(".dat") || name.endsWith(".docx");
                }
                return f.isDirectory() || name.endsWith(".txt") || name.endsWith(".dat") || name.endsWith(".docx");
            }

            public String getDescription() {
                if (open) {
                    return "Image (*.txt, *.dat, *.docx)";
                }
                return "Image (*.txt, *.dat,*.docx)";
            }
        };
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(ff);

        File f = null;
        if (open && fc.showOpenDialog(this) == fc.APPROVE_OPTION) {
            f = fc.getSelectedFile();
        } else if (!open && fc.showSaveDialog(this) == fc.APPROVE_OPTION) {
            f = fc.getSelectedFile();
        }
        return f;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MaHoaFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MaHoaFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MaHoaFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MaHoaFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MaHoaFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ChonAnh;
    private javax.swing.JButton btn_ChonFile;
    private javax.swing.JButton btn_Dong;
    private javax.swing.JButton btn_NhungAnh;
    private javax.swing.JScrollPane imageAfter;
    private javax.swing.JScrollPane imageBefore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txt_Khoa;
    private javax.swing.JTextField txt_NoiDung;
    // End of variables declaration//GEN-END:variables
}
